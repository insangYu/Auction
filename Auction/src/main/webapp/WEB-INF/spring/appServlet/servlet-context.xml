<?xml version="1.0" encoding="UTF-8"?>
<!-- <beans:beans xmlns="http://www.springframework.org/schema/mvc" -->
<!-- 	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" -->
<!-- 	xmlns:beans="http://www.springframework.org/schema/beans" -->
<!-- 	xmlns:context="http://www.springframework.org/schema/context" -->
<!-- 	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd -->
<!-- 		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd -->
<!-- 		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd"> -->
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd 
		http://www.springframework.org/schema/beans  http://www.springframework.org/schema/beans/spring-beans.xsd 
		http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context.xsd 
		http://www.springframework.org/schema/tx  http://www.springframework.org/schema/tx/spring-tx-4.0.xsd" >
	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>
	
	<!-- DB접근을 위한 DataSource -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource" >
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
    	<property name="url" value="jdbc:mysql://localhost:3306/simpleweb?characterEncoding=UTF-8&amp;useSSL=false&amp;serverTimezone=UTC" />
    	<property name="username" value="root" />
    	<property name="password" value="1234" />
    </bean>
    
    <!--  하이버네이트 세션을 위한 세션팩토리 -->
    <bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:hibernate.cfg.xml" />
	</bean>
	
	<tx:annotation-driven />
	<!-- 하이버네이트 트랜잭션을 위한 TransactionManager -->
	<bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<bean id="productDao" class="kr.ac.jbnu.dao.ProductDaoImpl">
   		<!-- 생성자 주입 -->
		<constructor-arg>
			<ref bean="sessionFactory" />
		</constructor-arg>
	</bean>
	
	<bean id="boardDao" class="kr.ac.jbnu.dao.BoardDaoImpl">
   		<!-- 생성자 주입 -->
		<constructor-arg>
			<ref bean="sessionFactory" />
		</constructor-arg>
	</bean>
	
	<bean id="commentDao" class="kr.ac.jbnu.dao.CommentDaoImpl">
   		<!-- 생성자 주입 -->
		<constructor-arg>
			<ref bean="sessionFactory" />
		</constructor-arg>
	</bean>
	
	<bean id="userAccountDao" class="kr.ac.jbnu.dao.UserAccountDaoImpl">
   		<!-- 생성자 주입 -->
		<constructor-arg>
			<ref bean="sessionFactory" />
		</constructor-arg>
	</bean>
	
	<bean id="cartDao" class="kr.ac.jbnu.dao.CartDaoImpl">
   		<!-- 생성자 주입 -->
		<constructor-arg>
			<ref bean="sessionFactory" />
		</constructor-arg>
	</bean>
	
	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		 <!-- setting maximum upload size -->
		<beans:property name="maxUploadSize" value="10000000" />
	</beans:bean>
	
	<context:component-scan base-package="kr.ac.jbnu" />
	
</beans>
